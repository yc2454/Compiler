1 shift/reduce conflict

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 18)

state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 2
	program	goto 131
	var	goto 1

	.	error


state 1:

	exp : var .  (reduce by rule 28)
	exp : var . ASSIGN exp 
	var : var . DOT ID 
	var : var . LBRACK exp RBRACK 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 28


state 2:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 31)



	.	reduce by rule 31


state 4:

	exp : BREAK .  (reduce by rule 54)



	.	reduce by rule 54


state 5:

	exp : LET . decs IN exps END 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	dec	goto 33
	fundec	goto 32
	vardec	goto 31
	tydec	goto 30
	decs	goto 29

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 37


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 38
	var	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 39
	var	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	var	goto 1

	.	error


state 10:

	exp : LPAREN . exps RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	var	goto 1
	exps	goto 41

	.	reduce by rule 56


state 11:

	exp : STRING .  (reduce by rule 30)



	.	reduce by rule 30


state 12:

	exp : INT .  (reduce by rule 29)



	.	reduce by rule 29

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 18)

state 13:

	exp : ID . LPAREN args RPAREN 
	exp : ID . LBRACE expflds RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	var : ID .  (reduce by rule 18)
	var : ID . LBRACK exp RBRACK 

	LPAREN	shift 45
	LBRACK	shift 44
	LBRACE	shift 43


	.	reduce by rule 18


state 14:

	exp : var ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 46
	var	goto 1

	.	error


state 15:

	var : var DOT . ID 

	ID	shift 47


	.	error


state 16:

	var : var LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 48
	var	goto 1

	.	error


state 17:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	var	goto 1

	.	error


state 18:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	var	goto 1

	.	error


state 19:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	var	goto 1

	.	error


state 20:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	var	goto 1

	.	error


state 21:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	var	goto 1

	.	error


state 22:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	var	goto 1

	.	error


state 23:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	var	goto 1

	.	error


state 24:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	var	goto 1

	.	error


state 25:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	var	goto 1

	.	error


state 26:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	var	goto 1

	.	error


state 27:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	var	goto 1

	.	error


state 28:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 60
	var	goto 1

	.	error


state 29:

	exp : LET decs . IN exps END 

	IN	shift 61


	.	error


state 30:

	dec : tydec .  (reduce by rule 5)



	.	reduce by rule 5


state 31:

	dec : vardec .  (reduce by rule 4)



	.	reduce by rule 4


state 32:

	dec : fundec .  (reduce by rule 3)



	.	reduce by rule 3


state 33:

	decs : dec .  (reduce by rule 1)
	decs : dec . decs 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	dec	goto 33
	fundec	goto 32
	vardec	goto 31
	tydec	goto 30
	decs	goto 62

	.	reduce by rule 1


state 34:

	tydec : TYPE . ID EQ ty 

	ID	shift 63


	.	error


state 35:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 64


	.	error


state 36:

	fundec : FUNCTION . ID LPAREN tyflds RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyflds RPAREN COLON ID EQ exp 

	ID	shift 65


	.	error


state 37:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 66


	.	error


state 38:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 67


	.	error


state 39:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	THEN	shift 68


	.	error


state 40:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : MINUS exp .  (reduce by rule 37)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 37


state 41:

	exp : LPAREN exps . RPAREN 

	RPAREN	shift 69


	.	error


state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exps : exp .  (reduce by rule 57)
	exps : exp . SEMICOLON exps 

	SEMICOLON	shift 70
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 57


state 43:

	exp : ID LBRACE . expflds RBRACE 

	ID	shift 73

	expflds	goto 72
	expfld	goto 71

	.	error


state 44:

	exp : ID LBRACK . exp RBRACK OF exp 
	var : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 74
	var	goto 1

	.	error


state 45:

	exp : ID LPAREN . args RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 76
	var	goto 1
	args	goto 75

	.	reduce by rule 22


state 46:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : var ASSIGN exp .  (reduce by rule 48)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 48


state 47:

	var : var DOT ID .  (reduce by rule 19)



	.	reduce by rule 19


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	var : var LBRACK exp . RBRACK 

	RBRACK	shift 77
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 45)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18


	.	reduce by rule 45


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 44)
	exp : exp . OR exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 44


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 39)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	RBRACE	reduce by rule 39
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 39
	OR	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 38)
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	RBRACE	reduce by rule 38
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 41)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	RBRACE	reduce by rule 41
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 40)
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	RBRACE	reduce by rule 40
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 43)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	RBRACK	reduce by rule 43
	RBRACE	reduce by rule 43
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	IN	reduce by rule 43
	END	reduce by rule 43
	FUNCTION	reduce by rule 43
	VAR	reduce by rule 43
	TYPE	reduce by rule 43


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 42)
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	RBRACE	reduce by rule 42
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 36)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 36


state 58:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 35)
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 35


state 59:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 34)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 34


state 60:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 33)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 33


state 61:

	exp : LET decs IN . exps END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	var	goto 1
	exps	goto 78

	.	reduce by rule 56


state 62:

	decs : dec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 63:

	tydec : TYPE ID . EQ ty 

	EQ	shift 79


	.	error


state 64:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 81
	ASSIGN	shift 80


	.	error


state 65:

	fundec : FUNCTION ID . LPAREN tyflds RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyflds RPAREN COLON ID EQ exp 

	LPAREN	shift 82


	.	error


state 66:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 83
	var	goto 1

	.	error


state 67:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 84
	var	goto 1

	.	error


state 68:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 85
	var	goto 1

	.	error


state 69:

	exp : LPAREN exps RPAREN .  (reduce by rule 47)



	.	reduce by rule 47


state 70:

	exps : exp SEMICOLON . exps 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	var	goto 1
	exps	goto 86

	.	reduce by rule 56


state 71:

	expflds : expfld .  (reduce by rule 26)
	expflds : expfld . COMMA expflds 

	COMMA	shift 87


	.	reduce by rule 26


state 72:

	exp : ID LBRACE expflds . RBRACE 

	RBRACE	shift 88


	.	error


state 73:

	expfld : ID . EQ exp 

	EQ	shift 89


	.	error


state 74:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	var : ID LBRACK exp . RBRACK 

	RBRACK	shift 90
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 75:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 91


	.	error


state 76:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	args : exp .  (reduce by rule 23)
	args : exp . COMMA args 

	COMMA	shift 92
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 23


state 77:

	var : var LBRACK exp RBRACK .  (reduce by rule 21)



	.	reduce by rule 21


state 78:

	exp : LET decs IN exps . END 

	END	shift 93


	.	error


state 79:

	tydec : TYPE ID EQ . ty 

	ID	shift 97
	LBRACE	shift 96
	ARRAY	shift 95

	ty	goto 94

	.	error


state 80:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 98
	var	goto 1

	.	error


state 81:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 99


	.	error


state 82:

	fundec : FUNCTION ID LPAREN . tyflds RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyflds RPAREN COLON ID EQ exp 

	ID	shift 102

	tyflds	goto 101
	tyfld	goto 100

	.	reduce by rule 13


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	TO	shift 103


	.	error


state 84:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 52)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 52


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 51)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	ELSE	shift 104


	.	reduce by rule 51


state 86:

	exps : exp SEMICOLON exps .  (reduce by rule 58)



	.	reduce by rule 58


state 87:

	expflds : expfld COMMA . expflds 

	ID	shift 73

	expflds	goto 105
	expfld	goto 71

	.	error


state 88:

	exp : ID LBRACE expflds RBRACE .  (reduce by rule 46)



	.	reduce by rule 46


state 89:

	expfld : ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 106
	var	goto 1

	.	error


state 90:

	exp : ID LBRACK exp RBRACK . OF exp 
	var : ID LBRACK exp RBRACK .  (reduce by rule 20)

	OF	shift 107


	.	reduce by rule 20


state 91:

	exp : ID LPAREN args RPAREN .  (reduce by rule 32)



	.	reduce by rule 32


state 92:

	args : exp COMMA . args 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 76
	var	goto 1
	args	goto 108

	.	reduce by rule 22


state 93:

	exp : LET decs IN exps END .  (reduce by rule 55)



	.	reduce by rule 55


state 94:

	tydec : TYPE ID EQ ty .  (reduce by rule 8)



	.	reduce by rule 8


state 95:

	ty : ARRAY . OF ID 

	OF	shift 109


	.	error


state 96:

	ty : LBRACE . tyflds RBRACE 

	ID	shift 102

	tyflds	goto 110
	tyfld	goto 100

	.	reduce by rule 13


state 97:

	ty : ID .  (reduce by rule 9)



	.	reduce by rule 9


state 98:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 6)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 6


state 99:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 111


	.	error


state 100:

	tyflds : tyfld .  (reduce by rule 14)
	tyflds : tyfld . COMMA tyflds 

	COMMA	shift 112


	.	reduce by rule 14


state 101:

	fundec : FUNCTION ID LPAREN tyflds . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyflds . RPAREN COLON ID EQ exp 

	RPAREN	shift 113


	.	error


state 102:

	tyfld : ID . COLON ID 

	COLON	shift 114


	.	error


state 103:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 115
	var	goto 1

	.	error


state 104:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 116
	var	goto 1

	.	error


state 105:

	expflds : expfld COMMA expflds .  (reduce by rule 27)



	.	reduce by rule 27


state 106:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	expfld : ID EQ exp .  (reduce by rule 25)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 25


state 107:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 117
	var	goto 1

	.	error


state 108:

	args : exp COMMA args .  (reduce by rule 24)



	.	reduce by rule 24


state 109:

	ty : ARRAY OF . ID 

	ID	shift 118


	.	error


state 110:

	ty : LBRACE tyflds . RBRACE 

	RBRACE	shift 119


	.	error


state 111:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 120
	var	goto 1

	.	error


state 112:

	tyflds : tyfld COMMA . tyflds 

	ID	shift 102

	tyflds	goto 121
	tyfld	goto 100

	.	reduce by rule 13


state 113:

	fundec : FUNCTION ID LPAREN tyflds RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyflds RPAREN . COLON ID EQ exp 

	COLON	shift 123
	EQ	shift 122


	.	error


state 114:

	tyfld : ID COLON . ID 

	ID	shift 124


	.	error


state 115:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 125


	.	error


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 50)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 50


state 117:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 49)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 49


state 118:

	ty : ARRAY OF ID .  (reduce by rule 11)



	.	reduce by rule 11


state 119:

	ty : LBRACE tyflds RBRACE .  (reduce by rule 10)



	.	reduce by rule 10


state 120:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 7)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 7


state 121:

	tyflds : tyfld COMMA tyflds .  (reduce by rule 15)



	.	reduce by rule 15


state 122:

	fundec : FUNCTION ID LPAREN tyflds RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 126
	var	goto 1

	.	error


state 123:

	fundec : FUNCTION ID LPAREN tyflds RPAREN COLON . ID EQ exp 

	ID	shift 127


	.	error


state 124:

	tyfld : ID COLON ID .  (reduce by rule 12)



	.	reduce by rule 12


state 125:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 128
	var	goto 1

	.	error


state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyflds RPAREN EQ exp .  (reduce by rule 16)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 16


state 127:

	fundec : FUNCTION ID LPAREN tyflds RPAREN COLON ID . EQ exp 

	EQ	shift 129


	.	error


state 128:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 53)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 53


state 129:

	fundec : FUNCTION ID LPAREN tyflds RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 130
	var	goto 1

	.	error


state 130:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyflds RPAREN COLON ID EQ exp .  (reduce by rule 17)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 17


state 131:


	EOF	accept


	.	error

482 of 980 action table entries left after compaction
99 goto table entries
